package components

import (
ff_entity "ff/internal/feature_flag/entity"
"ff/web/types"
)

templ Name(name string, isNameError bool, isCreation bool) {
<div class="">
  <label for="name" class="block text-lg font-semibold leading-6 text-gray-900">Name</label>
  <div class="mt-2">
    <div
      class="flex w-full rounded-md shadow-sm ring-1 ring-inset ring-gray-300 focus-within:ring-2 focus-within:ring-inset focus-within:ring-indigo-600">
      if isNameError {
      if isCreation {
      <input type="text" id="name" name="name" value={name}
        class="border-2 border-red-400 block pl-4 flex-1 py-1.5 pl-1 text-gray-900 placeholder:text-gray-400 focus:ring-0 bg-transparent" />
      } else {
      <input type="text" id="name" name="name" value={name}
        class="border-2 border-red-400 block pl-4 flex-1 py-1.5 pl-1 text-gray-900 placeholder:text-gray-400 bg-gray-300 cursor-not-allowed"
        readonly />
      }
      } else {
      if isCreation {
      <input type="text" id="name" name="name" value={name}
        class="border-0 block pl-4 flex-1 py-1.5 pl-1 text-gray-900 placeholder:text-gray-400 focus:ring-0 bg-transparent" />
      } else {
      <input type="text" id="name" name="name" value={name}
        class="border-0 block pl-4 flex-1 py-1.5 pl-1 text-gray-900 placeholder:text-gray-400 bg-gray-300 cursor-not-allowed"
        readonly />
      }
      }
    </div>
  </div>
</div>
}

templ IsActive(isActive bool) {
<div class="">
  <fieldset>
    <div class="mt-2">
      <div class="inline-flex align-middle gap-x-3">
        if isActive {
        <input id="isActive" name="isActive" type="checkbox"
          class="h-5 w-5 rounded border-0 block text-indigo-600 focus:ring-indigo-600" checked />
        } else {
        <input id="isActive" name="isActive" type="checkbox"
          class="h-5 w-5 rounded border-0 block text-indigo-600 focus:ring-indigo-600" />
        }
        <div class="text-lg leading-6 gap-x-2">
          <label for="isActive" class="font-semibold text-gray-900">Is Active?</label>
        </div>
      </div>
    </div>
  </fieldset>
</div>
}

templ Description(description string, isDescriptionError bool) {
<div class="">
  <label for="description" class="block text-lg font-semibold leading-6 text-gray-900">Description</label>
  <div class="mt-2">
    if isDescriptionError {
    <textarea type="text" id="description" name="description" rows="3"
      class="border-2 border-red-400 block w-full p-4 resize-none rounded-md border-0 py-1.5 text-gray-900 shadow-sm ring-1 ring-inset ring-gray-300 focus:ring-2 focus:ring-inset focus:ring-indigo-600">{ description }</textarea>
    } else {
    <textarea type="text" id="description" name="description" rows="3"
      class="border-0 block w-full p-4 resize-none rounded-md border-0 py-1.5 text-gray-900 shadow-sm ring-1 ring-inset ring-gray-300 focus:ring-2 focus:ring-inset focus:ring-indigo-600">{ description }</textarea>
    }
  </div>
</div>
}

templ ExpirationDate(expirationDate string) {
<div class="">
  <label for="expirationDate" class="block text-lg font-semibold leading-6 text-gray-900">Expiration Date</label>
  <div class="mt-2">
    <div
      class="flex rounded-md shadow-sm ring-1 ring-inset ring-gray-300 focus-within:ring-2 focus-within:ring-inset focus-within:ring-indigo-600">
      <input
        class="block flex-1 border-0 bg-transparent py-1.5 pl-4 text-gray-900 placeholder:text-gray-400 focus:ring-0"
        type="date" id="expirationDate" name="expirationDate" value={ expirationDate } />
    </div>
  </div>
</div>
}

templ Form(featureFlag ff_entity.FeatureFlagResponse, err types.ErrorCreateFeatureFlagForm, isCreation bool) {
<div>
  if isCreation {
  <form class="w-full" id="feature_flag_form" hx-post="/feature-flags" hx-swap="outterHTML swap:100ms"
    hx-encoding="application/json" onsubmit="return false;" hx-target="body">
    { children... }
  </form>
  } else {
  <form class="w-full" id="feature_flag_form" hx-put={ "/feature-flags/" + featureFlag.ID }
    hx-swap="outterHTML swap:100ms" hx-encoding="application/json" onsubmit="return false;" hx-target="body"
    hx-include="[name='name']">
    { children... }
  </form>
  }
</div>

}

templ NewFeatureFlagForm(featureFlag ff_entity.FeatureFlagResponse, err types.ErrorCreateFeatureFlagForm) {
@Form(featureFlag, err, true) {
<div>
  <div class="mt-4">
    <div class="border-b border-gray-900/10 pb-2">
      <h2 class="capitalize text-xl py-4"> Create Feature Flag
      </h2>
    </div>
  </div>

  <div class="grid grid-cols-1 gap-4 mt-4">
    @Name(featureFlag.Name, err.IsNameError, true)
    @IsActive(featureFlag.IsActive)
    @Description(featureFlag.Description, err.IsDescriptionError)
    @ExpirationDate(featureFlag.ExpirationDate)

    <!-- Buttons Action -->
    <div class="mt-6 flex items-center justify-end gap-2">
      <!-- Cancel -->
      <button type="button"
        class="text-sm font-semibold leading-6 text-indigo-900 bg-white border-solid border-1 border-gray-200 hover:bg-gray-200"
        hx-get="/" hx-target="body" hx-swap="outterHTML swap:100ms" _="on click trigger closeModal">Cancel</button>
      <!-- Create -->
      <button type="submit"
        class="text-sm font-semibold leading-6 border-solid border-1 text-white shadow-sm bg-indigo-600 hover:bg-indigo-500 focus-visible:outline focus-visible:outline-2 focus-visible:outline-offset-2 focus-visible:outline-indigo-600"
        _="on click wait trigger closeModal">
        Create
      </button>
    </div>

  </div>
</div>
}
}

templ UpdateFeatureFlagForm(featureFlag ff_entity.FeatureFlagResponse, err types.ErrorCreateFeatureFlagForm) {
@Form(featureFlag, err, false) {
<div>
  <div class="mt-4">
    <div class="border-b border-gray-900/10 pb-2">
      <h2 class="capitalize text-xl py-4">Update Feature Flag</h2>
    </div>
  </div>

  <div class="grid grid-cols-1 gap-4 mt-4">
    @Name(featureFlag.Name, err.IsNameError, false)
    @IsActive(featureFlag.IsActive)
    @Description(featureFlag.Description, err.IsDescriptionError)
    @ExpirationDate(featureFlag.ExpirationDate)

    <!-- Buttons Action -->
    <div class="mt-6 flex items-center justify-end gap-2">
      <!-- Cancel -->
      <button type="button"
        class="text-sm font-semibold leading-6 text-indigo-900 bg-white border-solid border-1 border-gray-200 hover:bg-gray-200"
        hx-get="/" hx-target="body" hx-swap="outterHTML swap:100ms" _="on click trigger closeModal">Cancel</button>
      <!-- Update -->
      <button type="submit"
        class="text-sm font-semibold leading-6 border-solid border-1 text-white shadow-sm bg-indigo-600 hover:bg-indigo-500 focus-visible:outline focus-visible:outline-2 focus-visible:outline-offset-2 focus-visible:outline-indigo-600">
        Update
      </button>
    </div>
  </div>
</div>
}
}

templ FeatureFlagForm(featureFlag ff_entity.FeatureFlagResponse, err types.ErrorCreateFeatureFlagForm) {
<div id="create_or_update_feature_flag_page" class="w-full">
  if featureFlag.ID == "" {
  @NewFeatureFlagForm(featureFlag, err)
  } else {
  @UpdateFeatureFlagForm(featureFlag, err)
  }

  // @ErrorMessage(err.HasError, err.ErrorMessage)
</div>
}